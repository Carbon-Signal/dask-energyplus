name: Build & Push dask-energyplus to GHCR (multi-arch, Python matrix)

on:
  workflow_dispatch:
    inputs:
      eplus_tag:
        description: "EnergyPlus release tag to install (e.g., v25.1.0)"
        required: false
        default: "v25.1.0"
      image_tag:
        description: "Primary image tag (e.g., 25.1)"
        required: false
        default: "25.1"
      push_latest:
        description: "Also push :latest (only for default Python)?"
        type: boolean
        required: false
        default: false
  push:
    branches: [ main ]
    paths:
      - "Dockerfile"
      - ".github/workflows/build-push.yml"

permissions:
  contents: read
  packages: write

concurrency:
  group: build-dask-energyplus-${{ github.ref }}-py${{ matrix.python-version }}
  cancel-in-progress: false

jobs:
  build-push:
    name: Build & push (py ${{ matrix.python-version }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        # Adjust versions here
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]

    env:
      # Controls which Python gets the un-suffixed tags (:25.1, :v25.1.0, :latest)
      DEFAULT_PY: "3.12"
      EPLUS_TAG: ${{ inputs.eplus_tag || 'v25.1.0' }}
      IMAGE_TAG: ${{ inputs.image_tag || '25.1' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute image and tags
        id: tags
        run: |
          OWNER_LC="$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')"
          IMAGE="ghcr.io/${OWNER_LC}/dask-energyplus"
          PY="${{ matrix.python-version }}"

          # Always publish Python-suffixed tags for each matrix variant
          TAGS="${IMAGE}:${IMAGE_TAG}-py${PY},${IMAGE}:${EPLUS_TAG}-py${PY}"

          # Only the default Python gets the bare tags (avoid collisions)
          if [ "${PY}" = "${DEFAULT_PY}" ]; then
            if [ "${{ inputs.push_latest }}" = "true" ] || [ "${{ github.ref }}" = "refs/heads/main" ]; then
              TAGS="${TAGS},${IMAGE}:${IMAGE_TAG},${IMAGE}:${EPLUS_TAG},${IMAGE}:latest"
            fi
          fi

          echo "image=${IMAGE}" >> "$GITHUB_OUTPUT"
          echo "tags=${TAGS}"   >> "$GITHUB_OUTPUT"

      - name: Build & Push (linux/amd64, linux/arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tags.outputs.tags }}
          build-args: |
            EPLUS_TAG=${{ env.EPLUS_TAG }}
            PYTHON_VERSION=${{ matrix.python-version }}
            # Used by your Dockerfile to avoid GH API rate limits when fetching EnergyPlus assets
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
