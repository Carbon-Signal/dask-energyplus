name: Build and publish multi-arch image

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      eplus_tag:
        description: "EnergyPlus release tag (e.g., v25.1.0)"
        required: false
        default: "v25.1.0"
      python_version:
        description: "Python version"
        required: false
        default: "3.11"
      miniforge_version:
        description: "Miniforge release (e.g., 24.7.1-0)"
        required: false
        default: "24.7.1-0"
      eplus_url:
        description: "Override EnergyPlus installer URL"
        required: false
        default: ""

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  docker:
    name: Buildx multi-arch
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Compute image name (lowercase)
        id: repo
        run: |
          IMAGE="${{ env.REGISTRY }}/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')"
          echo "image=${IMAGE}" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU (arm64 emulation)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.repo.outputs.image }}
          tags: |
            # Tag main as "latest"
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            # Tag with Git SHA
            type=sha,format=long,prefix=sha-
            # Semver tags for releases like v1.2.3
            type=semver,pattern={{version}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
            type=semver,pattern={{major}},enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}

      - name: Build and push (amd64 + arm64)
        id: buildx
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Enable provenance/SBOM attestation (BuildKit)
          provenance: true
          sbom: true
          build-args: |
            # Defaults can be overridden via workflow_dispatch inputs or repo/environment variables
            EPLUS_TAG=${{ github.event_name == 'workflow_dispatch' && inputs.eplus_tag || (vars.EPLUS_TAG || 'v25.1.0') }}
            PYTHON_VERSION=${{ github.event_name == 'workflow_dispatch' && inputs.python_version || (vars.PYTHON_VERSION || '3.11') }}
            MINIFORGE_VERSION=${{ github.event_name == 'workflow_dispatch' && inputs.miniforge_version || (vars.MINIFORGE_VERSION || '24.7.1-0') }}
            # Forward token for GitHub API rate limiting (used at build-time to fetch EnergyPlus release assets)
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            # Optional override for a specific EnergyPlus installer URL
            EPLUS_URL=${{ github.event_name == 'workflow_dispatch' && inputs.eplus_url || (vars.EPLUS_URL || '') }}

      - name: Smoke test (amd64)
        if: github.event_name != 'pull_request'
        run: |
          set -eux
          # Prefer the first computed tag for convenience
          TAG="$(echo "${{ steps.meta.outputs.tags }}" | head -n1)"
          docker run --rm --platform linux/amd64 "$TAG" energyplus --version

      - name: Smoke test (arm64 via QEMU)
        if: github.event_name != 'pull_request'
        run: |
          set -eux
          TAG="$(echo "${{ steps.meta.outputs.tags }}" | head -n1)"
          docker run --rm --platform linux/arm64 "$TAG" energyplus --version