name: Build & Push for Specific E+ Tags

on:
  workflow_dispatch:

env:
  IMAGE_NAME: Carbon-Signal/dask-energyplus
  UBUNTU_DEFAULT: 24.04
  PY_LIST: "3.9 3.10 3.11 3.12 3.13"
  TAG_LIST: "v25.1.0 v24.2.0 v24.1.0 v23.2.0 v23.1.0 v22.2.0 v22.1.0 v9.6.0"
  PLAT_BOTH: linux/amd64,linux/arm64

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { tag: v25.1.0, ubuntu: "24.04" }
          - { tag: v24.2.0, ubuntu: "22.04" }
          - { tag: v24.1.0, ubuntu: "22.04" }
          - { tag: v23.2.0, ubuntu: "22.04" }
          - { tag: v23.1.0, ubuntu: "22.04" }
          - { tag: v22.2.0, ubuntu: "22.04" }
          - { tag: v22.1.0, ubuntu: "22.04" }
          - { tag: v9.6.0, ubuntu: "20.04" }
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Fetch installer URL for tag
        id: fetch-url
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          API="https://api.github.com/repos/NREL/EnergyPlus/releases/tags/${{ matrix.tag }}"
          URL=$(curl -fsSL -H "Authorization: Bearer $GH_TOKEN" "$API" \
            | jq -r '.assets[] 
              | select(.name | test("^EnergyPlus-.*-Linux-Ubuntu${{ matrix.ubuntu }}-.*(x86_64|amd64)\\.sh$") 
                      or test("^EnergyPlus-.*-Linux-Ubuntu${{ matrix.ubuntu }}-.*(arm64|aarch64)\\.sh$")) 
              | .browser_download_url' \
            | head -n1)
          if [ -z "$URL" ]; then
            echo "No matching installer found for tag=${{ matrix.tag }}, ubuntu=${{ matrix.ubuntu }}"
            exit 1
          fi
          echo "url=$URL" >> "$GITHUB_OUTPUT"

      - name: Download installer
        run: |
          curl -fsSL "${{ steps.fetch-url.outputs.url }}" -o energyplus-installer.sh
          chmod +x energyplus-installer.sh

      - name: Build & push for each Python version
        run: |
          for PY in $PY_LIST; do
            docker buildx build \
              --platform $PLAT_BOTH \
              --push \
              --file Dockerfile \
              --build-arg UBUNTU_VERSION=${{ matrix.ubuntu }} \
              --build-arg PYTHON_VERSION=$PY \
              --tag ${IMAGE_NAME}:${{ matrix.tag }}-py${PY}-ubuntu${{ matrix.ubuntu }} \
              .
          done
